{"version":3,"sources":["components/cart.js","components/form.js","App.js","index.js"],"names":["CartItem","item","className","name","amount","price","calctotalprice","cartutils","cart","map","reduce","a","b","Cart","id","onClick","setCart","Form","setVerification","address","setAddress","onSubmit","e","preventDefault","htmlFor","required","type","value","onChange","target","VerifiedOrder","order","setForm","FormPage","verified","useState","Product","data","addToCart","description","src","image","alt","App","viewForm","product","updated","tempCart","concat","productsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACI,sBAAKC,UAAU,WAAf,UACI,kCAAKD,EAAKE,KAAV,OACA,kCAAKF,EAAKG,OAAV,WACA,8BAAIH,EAAKI,MAAQJ,EAAKG,OAAtB,iBAKCE,EAAiB,SAACC,GAE3B,OADeA,EAAUC,KAAKC,KAAI,SAAAR,GAAI,OAAKA,EAAKI,MAAQJ,EAAKG,UAC/CM,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAiB3BC,EAfF,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UAGZ,OACI,sBAAKL,UAAU,OAAf,UACI,2CACCK,EAAUC,KAAKC,KAAI,SAAAR,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKa,OAChD,6CAAgBR,EAAeC,GAA/B,aACA,wBAAQQ,QAAS,kBAAMR,EAAUS,QAAQ,KAAzC,4BCrBNC,G,MAAO,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAEtC,OAAQ,uBAAMlB,UAAU,OACpBmB,SAAU,SAACC,GACPA,EAAEC,iBACFL,GAAgB,IAHhB,UAOJ,uBAAOM,QAAQ,OAAf,kBAAkC,uBAClC,uBAAOC,UAAQ,EAACC,KAAK,OAAOvB,KAAK,SAAS,uBAC1C,uBAAOqB,QAAQ,QAAf,mBAAoC,uBACpC,uBAAOC,UAAQ,EAACC,KAAK,OAAOvB,KAAK,UAAU,uBAC3C,uBAAOqB,QAAQ,cAAf,yBAAgD,uBAChD,uBAAOC,UAAQ,EAACC,KAAK,OAAOvB,KAAK,gBAAgB,uBACjD,uBAAOqB,QAAQ,UAAf,qBAAwC,uBACxC,uBAAOC,UAAQ,EAACC,KAAK,OAAOvB,KAAK,UAAUW,GAAG,UAAUa,MAAOR,EAASS,SAAU,SAAAN,GAAC,OAAIF,EAAWE,EAAEO,OAAOF,UAAU,uBACrH,uBAAOD,KAAK,gBAUdI,EAAgB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,MAAOZ,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,WAAYY,EAA+B,EAA/BA,QAASd,EAAsB,EAAtBA,gBAU1D,OACI,sBAAKhB,UAAU,SAAf,UACI,8BACI,sDAEJ,sBAAKA,UAAU,OAAf,UACK6B,EAAMvB,KAAKC,KAAI,SAAAR,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKa,OAC5C,6CAAgBR,EAAeyB,GAA/B,aACA,kDAAqBZ,EAArB,UAEJ,8BACI,wBAAQJ,QApBD,WAEfK,EAAW,IACXW,EAAMf,QAAQ,IACdgB,GAAQ,GACRd,GAAgB,IAeR,+BAQDe,EApCE,SAAC,GAAmD,IAAjDF,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASd,EAAgC,EAAhCA,gBAAiBgB,EAAe,EAAfA,SAEjD,EAA8BC,mBAAS,IAAvC,mBAAOhB,EAAP,KAAgBC,EAAhB,KAGA,OAAQc,EAAW,cAAC,EAAD,CAAeH,MAAOA,EAAOZ,QAASA,EAASC,WAAYA,EAAYY,QAASA,EAASd,gBAAiBA,IAAsB,cAAC,EAAD,CAAMA,gBAAiBA,EAAiBC,QAASA,EAASC,WAAYA,KCtBvNgB,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAEvB,OACE,sBAAKpC,UAAU,OAAf,UAEE,4BAAImC,EAAKlC,OAET,4BAAIkC,EAAKX,OAET,4BAAIW,EAAKhC,QAGT,4BAAIgC,EAAKE,cACT,qBAAKC,IAAKH,EAAKI,MAAOC,IAAKL,EAAKE,cAChC,wBAAQxB,QAAS,kBAAMuB,EAAUD,IAAjC,qCAwDSM,MAhDf,WACE,MAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAiBZ,EAAjB,KACA,EAAoCG,oBAAS,GAA7C,mBAAOD,EAAP,KAAiBhB,EAAjB,KACA,EAAwBiB,mBAAS,IAAjC,mBAAO3B,EAAP,KAAaQ,EAAb,KAEMsB,EAAY,SAACO,GACjB,IAAIC,GAAU,EACVC,EAAWvC,EAAKC,KAAI,SAAAR,GAEtB,OAAIA,EAAKa,KAAO+B,EAAQ/B,IACtBgC,GAAU,EACH,2BAAK7C,GAAZ,IAAkBG,OAASH,EAAKG,OAAS,KAGpCH,KAEJ6C,IAASC,EAAWvC,EAAKwC,OAAO,CACnClC,GAAI+B,EAAQ/B,GACZX,KAAM0C,EAAQ1C,KACduB,KAAMmB,EAAQnB,KACdrB,MAAOwC,EAAQxC,MACfoC,MAAOI,EAAQJ,MACfF,YAAaM,EAAQN,YACrBnC,OAAQ,KAEVY,EAAQ+B,IAKJxC,EAAY,CAAEC,KAAMA,EAAMQ,QAASA,EAASsB,UAAWA,GAE7D,OAEE,sBAAKpC,UAAU,MAAf,UACI0C,EAAW,cAAC,EAAD,CAAUb,MAAOxB,EAAWyB,QAASA,EAASd,gBAAiBA,EAAiBgB,SAAUA,IAAe,sBAAMhC,UAAU,OAAhB,UACpH,qBAAKA,UAAU,UAAf,SACG+C,EAAaxC,KAAI,SAAAoC,GAAO,OAAI,cAAC,EAAD,CAA0BR,KAAMQ,EAASP,UAAWA,GAAtCO,EAAQ/B,SAGrD,cAAC,EAAD,CAAMP,UAAWA,QAGjB2B,GAAY,yBAASnB,QAAS,kBAAMiB,GAASY,IAAjC,UAA8CA,EAAW,iBAAmB,kBAA5E,WCjEpBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.39915d25.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const CartItem = ({ item }) => {\r\n    return (\r\n        <div className=\"cartitem\">\r\n            <p> {item.name} </p>\r\n            <p> {item.amount} kpl </p>\r\n            <p>{item.price * item.amount} €</p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport const calctotalprice = (cartutils) => {\r\n    const prices = cartutils.cart.map(item => (item.price * item.amount));\r\n    return prices.reduce((a, b) => a + b, 0);\r\n}\r\nconst Cart = ({ cartutils }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <h1>ostoskori</h1>\r\n            {cartutils.cart.map(item => <CartItem key={item.id} item={item} />)}\r\n            <p>yhteishinta {calctotalprice(cartutils)} €</p>\r\n            <button onClick={() => cartutils.setCart([])}>empty cart</button>\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\nexport default Cart","import React, { useState } from 'react'\r\nimport { CartItem, calctotalprice } from \"./cart\"\r\n\r\nconst Form = ({ setVerification, address, setAddress }) => {\r\n\r\n    return (<form className=\"form\"\r\n        onSubmit={(e) => {\r\n            e.preventDefault();\r\n            setVerification(true)\r\n\r\n\r\n        }}>\r\n        <label htmlFor=\"name\">Name</label><br />\r\n        <input required type=\"text\" name=\"name\" /><br />\r\n        <label htmlFor=\"email\">Email</label><br />\r\n        <input required type=\"text\" name=\"email\" /><br />\r\n        <label htmlFor=\"phonenumber\">Phonenumber</label><br />\r\n        <input required type=\"text\" name=\"phonenumber\" /><br />\r\n        <label htmlFor=\"address\">Address</label><br />\r\n        <input required type=\"text\" name=\"address\" id=\"address\" value={address} onChange={e => setAddress(e.target.value)} /><br />\r\n        <input type=\"submit\" />\r\n    </form >)\r\n}\r\nconst FormPage = ({ order, setForm, setVerification, verified }) => {\r\n\r\n    const [address, setAddress] = useState(\"\")\r\n\r\n\r\n    return (verified ? <VerifiedOrder order={order} address={address} setAddress={setAddress} setForm={setForm} setVerification={setVerification} /> : <Form setVerification={setVerification} address={address} setAddress={setAddress} />)\r\n}\r\nconst VerifiedOrder = ({ order, address, setAddress, setForm, setVerification }) => {\r\n    const resetstate = () => {\r\n\r\n        setAddress(\"\")\r\n        order.setCart([])\r\n        setForm(false)\r\n        setVerification(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"finish\">\r\n            <div>\r\n                <h1>kiitos tilauksesta</h1>\r\n            </div>\r\n            <div className=\"cart\">\r\n                {order.cart.map(item => <CartItem key={item.id} item={item} />)}\r\n                <p>yhteishinta {calctotalprice(order)} €</p>\r\n                <p>tilauksen osoite {address} </p>\r\n            </div>\r\n            <div>\r\n                <button onClick={resetstate}>Valmis ! =)</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormPage","import React, { useState } from 'react'\r\nimport productsData from './products.json'\r\nimport Cart from './components/cart'\r\nimport './site.css'\r\nimport FormPage from \"./components/form\"\r\n\r\nconst Product = ({ data, addToCart }) => {\r\n\r\n  return (\r\n    <div className=\"tabl\">\r\n\r\n      <p>{data.name}</p>\r\n\r\n      <p>{data.type}</p>\r\n\r\n      <p>{data.price}</p>\r\n\r\n\r\n      <p>{data.description}</p>\r\n      <img src={data.image} alt={data.description} />\r\n      <button onClick={() => addToCart(data)}>Lisää koriin!</button>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nfunction App() {\r\n  const [viewForm, setForm] = useState(false)\r\n  const [verified, setVerification] = useState(false)\r\n  const [cart, setCart] = useState([])\r\n\r\n  const addToCart = (product) => {\r\n    let updated = false\r\n    let tempCart = cart.map(item => {\r\n\r\n      if (item.id === product.id) {\r\n        updated = true\r\n        return { ...item, amount: (item.amount + 1) };\r\n      }\r\n\r\n      return item;\r\n    })\r\n    if (!updated) tempCart = cart.concat({\r\n      id: product.id,\r\n      name: product.name,\r\n      type: product.type,\r\n      price: product.price,\r\n      image: product.image,\r\n      description: product.description,\r\n      amount: 1\r\n    })\r\n    setCart(tempCart)\r\n  }\r\n\r\n\r\n\r\n  const cartutils = { cart: cart, setCart: setCart, addToCart: addToCart }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      { viewForm ? <FormPage order={cartutils} setForm={setForm} setVerification={setVerification} verified={verified} /> : < div className=\"shop\">\r\n        <div className=\"wrapper\">\r\n          {productsData.map(product => <Product key={product.id} data={product} addToCart={addToCart}  ></Product>)}\r\n\r\n        </div>\r\n        <Cart cartutils={cartutils} />\r\n\r\n      </div>}\r\n      {!verified && < button onClick={() => setForm(!viewForm)} >{viewForm ? \"palaa kauppaan\" : \"vahvista tilaus\"} </button>}\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}